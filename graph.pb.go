// Code generated by protoc-gen-go. DO NOT EDIT.
// source: graph.proto

package graph

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsisdnImsiImei struct {
	Msisdn               string   `protobuf:"bytes,1,opt,name=Msisdn,proto3" json:"Msisdn,omitempty"`
	Imsi                 string   `protobuf:"bytes,2,opt,name=Imsi,proto3" json:"Imsi,omitempty"`
	Imei                 string   `protobuf:"bytes,3,opt,name=Imei,proto3" json:"Imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsisdnImsiImei) Reset()         { *m = MsisdnImsiImei{} }
func (m *MsisdnImsiImei) String() string { return proto.CompactTextString(m) }
func (*MsisdnImsiImei) ProtoMessage()    {}
func (*MsisdnImsiImei) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e4c656902fc0e6b, []int{0}
}

func (m *MsisdnImsiImei) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsisdnImsiImei.Unmarshal(m, b)
}
func (m *MsisdnImsiImei) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsisdnImsiImei.Marshal(b, m, deterministic)
}
func (m *MsisdnImsiImei) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsisdnImsiImei.Merge(m, src)
}
func (m *MsisdnImsiImei) XXX_Size() int {
	return xxx_messageInfo_MsisdnImsiImei.Size(m)
}
func (m *MsisdnImsiImei) XXX_DiscardUnknown() {
	xxx_messageInfo_MsisdnImsiImei.DiscardUnknown(m)
}

var xxx_messageInfo_MsisdnImsiImei proto.InternalMessageInfo

func (m *MsisdnImsiImei) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *MsisdnImsiImei) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *MsisdnImsiImei) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func init() {
	proto.RegisterType((*MsisdnImsiImei)(nil), "graph.MsisdnImsiImei")
}

func init() { proto.RegisterFile("graph.proto", fileDescriptor_3e4c656902fc0e6b) }

var fileDescriptor_3e4c656902fc0e6b = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2f, 0x4a, 0x2c,
	0xc8, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0xa4, 0xa4, 0xd3, 0xf3, 0xf3,
	0xd3, 0x73, 0x52, 0xf5, 0xc1, 0x82, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95, 0x10,
	0x35, 0x4a, 0x01, 0x5c, 0x7c, 0xbe, 0xc5, 0x99, 0xc5, 0x29, 0x79, 0x9e, 0xb9, 0xc5, 0x99, 0x9e,
	0xb9, 0xa9, 0x99, 0x42, 0x62, 0x5c, 0x6c, 0x10, 0x11, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x28, 0x4f, 0x48, 0x88, 0x8b, 0x05, 0xa4, 0x46, 0x82, 0x09, 0x2c, 0x0a, 0x66, 0x43, 0xc4, 0x52,
	0x33, 0x25, 0x98, 0x61, 0x62, 0xa9, 0x99, 0x46, 0x0e, 0x5c, 0x6c, 0x3e, 0xf9, 0x89, 0x29, 0xa9,
	0x45, 0x42, 0x66, 0x5c, 0xcc, 0xbe, 0x99, 0x99, 0x42, 0xa2, 0x7a, 0x10, 0x47, 0xa1, 0xda, 0x23,
	0x25, 0xa6, 0x07, 0x71, 0x97, 0x1e, 0xcc, 0x5d, 0x7a, 0xae, 0x20, 0x77, 0x29, 0x31, 0x24, 0xb1,
	0x81, 0x45, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x34, 0x08, 0xfd, 0xcd, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoaderClient is the client API for Loader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoaderClient interface {
	Mii(ctx context.Context, in *MsisdnImsiImei, opts ...grpc.CallOption) (*empty.Empty, error)
}

type loaderClient struct {
	cc grpc.ClientConnInterface
}

func NewLoaderClient(cc grpc.ClientConnInterface) LoaderClient {
	return &loaderClient{cc}
}

func (c *loaderClient) Mii(ctx context.Context, in *MsisdnImsiImei, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/graph.Loader/Mii", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoaderServer is the server API for Loader service.
type LoaderServer interface {
	Mii(context.Context, *MsisdnImsiImei) (*empty.Empty, error)
}

// UnimplementedLoaderServer can be embedded to have forward compatible implementations.
type UnimplementedLoaderServer struct {
}

func (*UnimplementedLoaderServer) Mii(ctx context.Context, req *MsisdnImsiImei) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mii not implemented")
}

func RegisterLoaderServer(s *grpc.Server, srv LoaderServer) {
	s.RegisterService(&_Loader_serviceDesc, srv)
}

func _Loader_Mii_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsisdnImsiImei)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoaderServer).Mii(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graph.Loader/Mii",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoaderServer).Mii(ctx, req.(*MsisdnImsiImei))
	}
	return interceptor(ctx, in, info, handler)
}

var _Loader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "graph.Loader",
	HandlerType: (*LoaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mii",
			Handler:    _Loader_Mii_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "graph.proto",
}
